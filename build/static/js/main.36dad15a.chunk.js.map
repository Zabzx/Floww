{"version":3,"sources":["components/SignUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["SignUp","passUp","useState","userFirstName","setUserFirstName","userLastName","setUserLastName","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","confirmedPassword","setConfirmedPassword","className","action","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAkEeA,EA/DA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAkDV,mBAAS,IAA3D,mBAAOW,EAAP,KAA0BC,EAA1B,KAeE,OACI,sBAAKC,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACA,mBAAGA,UAAU,0BACT,kDACA,yEAEJ,qBAAKA,UAAU,eAAf,SACI,uBAAMC,OAAO,GAAGC,SApBf,SAACC,GACZA,EAAEC,iBAGCR,IAAiBE,EAKpBZ,EAAO,CAACE,gBAAeE,eAAcE,WAAUE,YAAWE,eAAcE,sBAJpEO,MAAM,0BAeA,UACI,8BACA,uBAAOC,KAAK,OAAOC,MAAOnB,EAAeoB,SAAU,SAACL,GAAD,OAAOd,EAAiBc,EAAEM,OAAOF,QAAQG,YAAY,iBAExG,8BACI,uBAAOJ,KAAK,OAAOC,MAAOjB,EAAckB,SAAU,SAACL,GAAD,OAAOZ,EAAgBY,EAAEM,OAAOF,QAAQG,YAAY,gBAG1G,8BACQ,uBAAOJ,KAAK,OAAOC,MAAOf,EAAUgB,SAAU,SAACL,GAAD,OAAOV,EAAYU,EAAEM,OAAOF,QAAQG,YAAY,eAGtG,8BACI,uBAAOJ,KAAK,QAAQC,MAAOb,EAAWc,SAAU,SAACL,GAAD,OAAOR,EAAaQ,EAAEM,OAAOF,QAAQG,YAAY,YAGrG,8BACI,uBAAOJ,KAAK,WAAWC,MAAOX,EAAcY,SAAU,SAACL,GAAD,OAAON,EAAgBM,EAAEM,OAAOF,QAAQG,YAAY,eAG9G,8BACQ,uBAAOJ,KAAK,WAAWC,MAAOT,EAAmBU,SAAU,SAACL,GAAD,OAAOJ,EAAqBI,EAAEM,OAAOF,QAAQG,YAAY,uBAG5H,qBAAKV,UAAU,MAAf,SACD,wBAAQA,UAAU,aAAlB,+BC9BJW,MAzBf,WAEE,MAA0CxB,mBAAS,IAAnD,mBAAsBE,GAAtB,WACA,EAAwCF,mBAAS,IAAjD,mBAAqBI,GAArB,WACA,EAAgCJ,mBAAS,IAAzC,mBAAiBM,GAAjB,WACA,EAAkCN,mBAAS,IAA3C,mBAAkBQ,GAAlB,WACA,EAAwCR,mBAAS,IAAjD,mBAAqBU,GAArB,WACA,EAAkDV,mBAAS,IAA3D,mBAA0BY,GAA1B,WAWA,OACE,mCACA,cAAC,EAAD,CAAQb,OAXU,SAAC0B,GACnBvB,EAAiBuB,EAAKxB,eACtBG,EAAgBqB,EAAKtB,cACrBG,EAAYmB,EAAKpB,UACjBG,EAAaiB,EAAKlB,WAClBG,EAAgBe,EAAKhB,cACrBG,EAAqBa,EAAKd,yBCNfe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.36dad15a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst SignUp = ({ passUp }) => {\r\n\r\n  const [userFirstName, setUserFirstName] = useState('');\r\n  const [userLastName, setUserLastName] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [confirmedPassword, setConfirmedPassword] = useState('');\r\n\r\n  //Submit info and pass up to app state\r\n  const submit = (e) => {\r\n      e.preventDefault();\r\n\r\n      //Password validation\r\n      if(userPassword !== confirmedPassword){\r\n          alert(`Passwords don't match`)\r\n          return;\r\n      }\r\n\r\n      passUp({userFirstName, userLastName, userName, userEmail, userPassword, confirmedPassword})\r\n  }\r\n\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <div className=\"welcome-area\">\r\n            <i className=\"fab fa-connectdevelop\"></i>\r\n                <h1>Welcome to Floww</h1>\r\n                <p>Where we build meaningful connections</p>\r\n            </div>\r\n            <div className=\"sign-up-area\">\r\n                <form action=\"\" onSubmit={submit}>\r\n                    <div>\r\n                    <input type=\"text\" value={userFirstName} onChange={(e) => setUserFirstName(e.target.value)} placeholder=\"First Name\"/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" value={userLastName} onChange={(e) => setUserLastName(e.target.value)} placeholder=\"Last name\"/>\r\n                    </div>\r\n\r\n                    <div>\r\n                            <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)} placeholder=\"UserName\"/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input type=\"email\" value={userEmail} onChange={(e) => setUserEmail(e.target.value)} placeholder=\"Email\"/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input type=\"password\" value={userPassword} onChange={(e) => setUserPassword(e.target.value)} placeholder=\"Password\"/>\r\n                    </div>\r\n                    {/* I want to to add a feature that allows the user to show thier passowrd in the future*/}\r\n                    <div>\r\n                            <input type=\"password\" value={confirmedPassword} onChange={(e) => setConfirmedPassword(e.target.value)} placeholder=\"Confrim Password\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"btn\">\r\n                   <button className=\"submit-btn\">Submit</button>\r\n                   </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import SignUp from \"./components/SignUp\";\nimport { useState } from \"react\";\n\nfunction App() {\n\n  const [userFirstName, setUserFirstName] = useState('');\n  const [userLastName, setUserLastName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n\n  const getFormData = (data) => {\n    setUserFirstName(data.userFirstName)\n    setUserLastName(data.userLastName)\n    setUserName(data.userName)\n    setUserEmail(data.userEmail)\n    setUserPassword(data.userPassword)\n    setConfirmedPassword(data.confirmedPassword)\n  }\n\n  return (\n    <>\n    <SignUp passUp={getFormData}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}